generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TYPE {
  ONLINE
  INPERSON
}

enum STATUS {
  ACTIVATE
  DONE
  CANCELED
}

model Users {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  email    String @db.VarChar(255)
  password String @db.VarChar(255)
  token    String @unique

  Events     Events[]
  Categories Categories[]
}

model EventGuest {
  id        Int     @id @default(autoincrement())
  eventId   Int
  guestId   Int
  confirmed Boolean @default(false)
  declined  Boolean @default(false)

  event Events @relation(fields: [eventId], references: [id])
  guest Guests @relation(fields: [guestId], references: [id])

  @@unique([eventId, guestId])
}

model Events {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(255)
  dhStart     DateTime
  dhEnd       DateTime
  zipCode     String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  link        String?  @db.VarChar(255)
  peopleLimit Int
  status      STATUS
  confirmed   Int      @default(0)
  declined    Int      @default(0)
  imagePath   String?  @db.VarChar(255)
  type        TYPE

  Categories   Categories @relation(fields: [categoriesId], references: [id])
  categoriesId Int

  User    Users? @relation(fields: [usersId], references: [id])
  usersId Int?

  EventGuest EventGuest[]
}

model Guests {
  id               Int     @id @default(autoincrement())
  name             String  @db.VarChar(255)
  email            String? @unique @db.VarChar(255)
  phone            String? @db.VarChar(20)
  verificationCode String?

  EventGuest EventGuest[]
}

model Categories {
  id   Int    @id @default(autoincrement())
  uuid String @unique @default(uuid())
  name String @db.VarChar(255)

  color   String @db.VarChar(255)
  User    Users? @relation(fields: [usersId], references: [id])
  usersId Int?

  Events Events[]
}
